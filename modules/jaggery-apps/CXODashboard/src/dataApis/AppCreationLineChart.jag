<%

var userConfig = require('commons/userConfig.js');
var dbConfig = require('commons/dbConfig.js');
var util = require('commons/Util.js');
include("/constants.jag");

var isUserLoggedIn = userConfig.isUserLoggedIn();

var tenantID = userConfig.getTenantID();

var timePeriod = getTimePeriod();
var chartData = getData(timePeriod[0], timePeriod[1]);

function getTimePeriod() {

    if (isUserLoggedIn) {

        var result = [0, 0];
        if (request.getParameter(FROM) == null || request.getParameter(TO) == null) {

            var query = "SELECT MIN(ROUND(TIME_ST/1000)) AS min_time_st, MAX(ROUND(TIME_ST/1000)) AS max_time_st FROM " +
                        "APP_CREATION_BY_TENANT WHERE TENANT_ID=" + tenantID + " ;";
            var dbResult = dbConfig.queryDb(query);

            if (util.isValidDbResult(dbResult[0], ['min_time_st', 'max_time_st'])) {
                result[0] = dbResult[0]['min_time_st'];
                result[1] = dbResult[0]['max_time_st'];
            }
	    	
        } else {
            result[0] = request.getParameter(FROM);
            result[1] = request.getParameter(TO);
        }
        return result;
    }
}

function getData(from, to) {

if (isUserLoggedIn) {
    var query = "SELECT COUNT(DISTINCT APPLICATION_KEY) AS NO_OF_APPS, TIME_ST FROM APP_CREATION_BY_TENANT WHERE TENANT_ID = '" +
                tenantID + "' AND ROUND(TIME_ST/1000) BETWEEN " + parseInt(from) + " AND " + parseInt(to) +
                " GROUP BY DATE(FROM_UNIXTIME(TIME_ST/1000)) ORDER BY TIME_ST;";

    var dbResult = dbConfig.queryDb(query);

    return convertDBResult(dbResult);
	}
}

function convertDBResult(dbResult){

	var data = [];
	var len = dbResult.length;
        var temp = 0;
        for (var i = 0; i < len; i++) {
        var obj = dbResult[i];
		if(obj == null || obj.length<2){
			return null;		
		}
		var timest = obj["TIME_ST"];
		var noOfApps = obj["NO_OF_APPS"];

		var date = new Date(parseInt(timest));

		var month = date.getMonth();
        	var day = date.getDate();
       		var year = date.getFullYear();

		var adjustedTimest = Date.UTC(year,month,day);

		data.push([adjustedTimest, noOfApps]);		
		
            }
	return data;
}

var gen_options = require("config/line-chart-option.json");
var full_data;

if (chartData != null) {
    gen_options["xaxis"]["min"] = chartData.length ==0 ? new Date().getTime() : chartData[0][0]-24*60*60*1000;
    gen_options["xaxis"]["max"] = chartData.length ==0 ? new Date().getTime() + 24*60*60*1000 : chartData[chartData.length-1][0] + 24*60*60*1000;
    gen_options["series"]["color"] = "#7F8CFF";
    gen_options["xaxis"]["mode"] = "time";
    gen_options["xaxis"]["timeformat"] = "%y/%m/%d";
    gen_options["xaxis"]["minTickSize"] = [1, "day"];
    gen_options["xaxis"]["axisLabel"] = 'Date';
    gen_options["yaxis"]["axisLabel"]= "Number of Applications";
    full_data = {0:{"data": chartData}, 1: gen_options};
}
else {
    full_data = {0: {"data":""}, 1: gen_options};
}

var _full_data = stringify(full_data);
response.contentType = 'text/json';
print(_full_data);

%>
