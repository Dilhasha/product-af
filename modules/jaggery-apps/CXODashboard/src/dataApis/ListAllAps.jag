<%
var userConfig = require('commons/userConfig.js');
var dbConfig = require('commons/dbConfig.js');
var util = require('commons/Util.js');
include("/constants.jag");

var isUserLoggedIn = userConfig.isUserLoggedIn();

var tenantID = userConfig.getTenantID();

var timePeriod = getTimePeriod();
var chartData = getData(timePeriod[0], timePeriod[1]);

function getTimePeriod() {

   if (isUserLoggedIn) {

       var result = [0, 0];
       if (request.getParameter(FROM) == null || request.getParameter(TO) == null) {

           var query = "SELECT MIN(ROUND(TIME_ST/1000)) AS min_time_st, MAX(ROUND(TIME_ST/1000)) AS max_time_st " +
                       "FROM APP_VERSIONS_BY_STAGE WHERE TENANT_ID=" + tenantID + " ;";
           var dbResult = dbConfig.queryDb(query);

           if (util.isValidDbResult(dbResult[0], ['min_time_st', 'max_time_st'])) {
               result[0] = dbResult[0]['min_time_st'];
               result[1] = dbResult[0]['max_time_st'];
           }
	    	
        } else {
            result[0] = request.getParameter(FROM);
            result[1] = request.getParameter(TO);
        }
        return result;
    }
}

function getData(from, to) {

    if (isUserLoggedIn) {

        var query = "SELECT DISTINCT APPLICATION_KEY, APPLICATION_NAME FROM APP_VERSIONS_BY_STAGE WHERE TENANT_ID = " +
                    tenantID + " AND ROUND(TIME_ST/1000) BETWEEN " + parseInt(from) + " AND " + parseInt(to) + ";";
        var dbResult = dbConfig.queryDb(query);

        return createJSON(dbResult);
    }
}


	function createJSON(result) {
            var len = result.length;
            var rows = new Array();

		var data = [];
		var objtemp = {};

            for (var i = 0; i < len; i++) {
                var obj = result[i];
		var row = new Array();
		if(obj == null || obj.length<2){
			return null;		
		}		
		var appKey= obj["APPLICATION_KEY"];
		var appName = obj["APPLICATION_NAME"];
		
		objtemp[appKey] = appName;
            }

	data.push(objtemp);
    	return data;
	
	}

	print(chartData);

%>
