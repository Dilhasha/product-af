<% include("/jagg/constants.jag"); %>
<% jagg.template("application/get", function(inputs, outputs, jagg) { %>
<%
    var log = new Log();
    var applicationName = request.getParameter("applicationName");
    var applicationKey = request.getParameter("applicationKey");
    var stagesMap = outputs.stagesMap;
    var hasDomainMappingPermission = outputs.hasDomainMappingPermission;
    var fineGrainedDomainMappingAllowedStage = outputs.fineGrainedDomainMappingAllowedStage;
    var mod = jagg.module("manager");
    var permissionMod = jagg.module("permission");
    var tenantDomain = mod.getTenantDomain();
    var hasCXOPermissionOnApps = permissionMod.isUserAccessGranted(applicationKey, PERMISSION_CXO_DASHBOARD);
    var isTenantAdmin = permissionMod.hasTenantLevelUserMgtPermission();
    var appDomain = getProperty("DomainName");
    var isUploadableApp = outputs.isUploadableApp;
    %>
 <script type="text/javascript" charset="utf-8">
    //this is for zeroclipboard pluging
    var _defaults = {
      moviePath:         "<%=jagg.getAbsoluteUrl(jagg.getThemeFile('assets/js/vendor/ZeroClipboard/ZeroClipboard.swf'))%>",        // URL to movie
     trustedDomains:    undefined,                  // Domains that we should trust (single string or array of strings)
     hoverClass:        "zeroclipboard-is-hover",   // The class used to hover over the object
     activeClass:       "zeroclipboard-is-active",  // The class used to set object active
     allowScriptAccess: "sameDomain",               // SWF outbound scripting policy
     useNoCache:        true,                       // Include a nocache query parameter on requests for the SWF
     amdModuleId:       null                       // AMD module ID or path to access the ZeroClipboard object
   };
   ZeroClipboard.setDefaults(_defaults);

   var processIndicatorHTML='<img src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile("images/processing.gif"))%>" id="processIndicator" style="width:22px;height:22px;"/>';
   var issuesSummaryJSON = {};
   var openIssuesSummaryJSON={};//keep the open issues for each version
   var descriptionInfo="";//declared to hold the application description
   var loggedinUser='';
   var appownerName='';
   var allResourceCount = [];
   var appInfo;//
   var domainMappedVersion;
   var subDomain;
   var previousSubDomain;

   var fgdmAllowedStage  = JSON.parse('<%=stringify(fineGrainedDomainMappingAllowedStage)%>') ;
   var deploymentPermission  = JSON.parse('<%=stringify(stagesMap)%>') ;
   var tenantDomain = '<%=tenantDomain%>';
   var hasCXOPermissionOnApps = '<%=hasCXOPermissionOnApps%>';
   var isTenantAdmin = '<%=isTenantAdmin%>';
   var applicationKey = '<%=applicationKey%>';
   var isUploadableApp = '<%=isUploadableApp%>';
   var hasDomainMappingPermission = '<%=hasDomainMappingPermission%>';
   var urlMap={}; //contains map urls agains appversion. introduced to reduce BE calls

   //[cdata[
    $(document).ready(function(){
        loggedinUser='<%=userName%>';

        getHelpTips();
        loadAppIcon('<%=applicationKey%>');
        loadApplicationInfo();


        $('#deleteButton').click(function(){
            var status =$('#deleteButton').attr('disabled');
            if(status!==null && status!='disabled'){
               jagg.popMessage({type:'confirm',title:'Delete Application',content:'Are you sure you want to delete application <%=applicationName%>?',okCallback:function(){deleteApplication()}});
            }
        });

        var deleteForm=$('#deleteForm');


        $(deleteForm).ajaxForm({
            complete: function(result) { // on complete
                var resp =result.responseText;

                var jsonResp = JSON.parse(resp);
                if(jsonResp.result == 0){
                    jagg.message({
                        content: jsonResp.message,
                        type: 'error', id:'appdeleteerrormsg'
                    });
                    return;
                }

                var response = jQuery.parseJSON(resp);
                if(response != undefined) {
                    var repositoryPath = response.toString();
                    if(response.result==1.0){
                      window.location.replace("index.jag");
                    }
                }
            }
        });


        createCurrentStatus(true);

        if(loggedinUser!=appownerName){
            $('.element-editor-hover').click(function(){
                $(this).parent().hide().next().show();
            });
        }

        $('.element-editor-cancel').click(function(){
            $(this).closest('.element-editor-edit').hide().prev().show();
        })
        $('#description_save_btn').click(function(){
            $(this).closest('.element-editor-edit').hide().prev().show();
            var newDescription = $('#description_edit').val();
            jagg.post("../blocks/application/update/ajax/update.jag", {
                action:"updateDescription",
                applicationKey:'<%=applicationKey%>',
                newDescription:newDescription
                },function (result) {
                    $('.description').html(newDescription);
                    if(newDescription.trim() == "" || newDescription == null){
                        $('#description_view').html("Click here to add description");
                        $('#description_hover').html("Click here to add description");
                    }
                },function (jqXHR, textStatus, errorThrown) {
                    //jagg.message({content:'Error occured while updating description!',type:'error' });
                    jagg.message({content:'Error occured while updating description!',type:'error',id:'myuniqeid' });
            });
        });
        $('#sub_domain_save_btn').click(function(){
            $(this).closest('.element-editor-edit').hide().prev().show();
            if(!validateSubDomain()){
                return;
            }
          //isDomainAvailable();
            updateDomainMapping();
        });
        $('#sub_domain_cancel_btn').click(function(){
        	$('#sub_domain_edit').val("");
        });
   });

function deleteApplication(){
   $('#deleteButton').attr('disabled','disabled');
   $('#deleteForm').submit();
}
function loadAppIcon(appKey) {
    jagg.post("../blocks/application/get/ajax/list.jag", {
        action: "isAppIconAvailable",
        applicationKey: appKey
    },

    function (result) {
        if(result == 101){
            $(".appHomeIcon").attr('src','<%=jagg.getAbsoluteUrl(jagg.getThemeFile('assets/img/app_icon.png'))%>');
        }else{
            <%
    var appFacURL = getProperty(APPFACTORY_SERVER_URL).split("services")[0];
    var iconUrl = appFacURL + getProperty(WEB_CONTEXT_ROOT) + "/site/blocks/application/get/ajax/list.jag?action=getAppIcon&applicationKey="+applicationKey;
    %>
    $(".appHomeIcon").attr('src','<%=iconUrl%>');
        }

    },
    function (jqXHR, textStatus, errorThrown) {
    });

}




function submitChangeAppIcon(){
    $('#changeAppIcon').submit();
}

 function toErrorHtml(message){
    var html="<span style=\"color:#D16666\">"+message+"</span>";
    return html;
 }

 function toInfoHtml(message){
    var html="<span style=\"color:#363636\">"+message+"</span>";
     return html;
 }




   function copyNewDependenciesDeployAndLaunchArtifact(applicationKey, version, stage, deployAction, state, type){
       launchApp(applicationKey, version,stage,state,type);
       jagg.post("../blocks/build/add/ajax/add.jag", {
               action: "copyNewDependenciesAndDeployArtifact",
               applicationKey: applicationKey,
               deployAction:deployAction,
               stage:stage,
               tagName:"",
               version:version
           }, function (result) {
               launchApp(applicationKey, version,stage,state,type);
               jagg.message({
                   content: "The Deployment is successfully submitted. - Refresh the page in few seconds.",
                   type: 'success',
                   id:'message_id_success'
               });
               hideNotification();
           },

           function (jqXHR, textStatus, errorThrown) {
               jagg.message({
                   content: "Error occurred while deploying the artifact.",
                   type: 'error',
                   id:'message_id'
               });

           });
   };

   function isAppDeployed(version, stage, type, promoteStatus){
	   jagg.post("../blocks/application/get/ajax/list.jag", {
           action: "getMetaDataForAppVersion",
           applicationKey: '<%=applicationKey%>',
           version: version,
           stage: stage,
           state: "started",
           type: type
       }, function (result) {
           var launchHide;
           if (stage === "Retired") {
               launchHide = "hidden";
           }

           var executionType;
           if (type == "dbs" || type == "bpel") {
               executionType = "View WSDL";
           } else if (type == "esb") {
               executionType = "View Synapse Config";
           } else {
               executionType = "Open";
           }

    	   var buttons = "";
    	   var resJSON = jQuery.parseJSON(result);
    	   var URL = resJSON.url;

    	   //Domain mapping
           if(domainMappedVersion != null && version == domainMappedVersion && previousSubDomain != null  && (previousSubDomain.trim().length > 0)){
               URL = "http://" + previousSubDomain + ".<%=appDomain%>";
           }

    	   if(resJSON.url){
    		   if(promoteStatus==="pending" && deploymentPermission[stage]){
    			   buttons += '<a  href="#" onclick="acceptAndDeploy(\'<%=applicationKey%>\',\'' + version + '\',\'' + stage + '\',\'deploy\',\'started\',\'' + type + '\');" class="btn main small push_right_10 escape-event" style="margin-left:0px;float:left;">Accept & Deploy</a>&nbsp;';
    		   }else{
	    		   buttons += '<a href="'+ URL +'" target="_blank" class="push_right_10 escape-event" style="margin-left:0px;float:left;">' + executionType + '</a>&nbsp;';
	    		   //buttons += '<a class="copy-link" id ="launch'+version.split(".").join("_")+'" title="Copy URL" data-clipboard-text=""><span class="icon-copy"></span></a>';
    		   }
    	   }else{
    		   if(deploymentPermission[stage]){
	    		   if(promoteStatus==="pending"){
	    			   buttons += '<a  href="#" onclick="acceptAndDeploy(\'<%=applicationKey%>\',\'' + version + '\',\'' + stage + '\',\'deploy\',\'started\',\'' + type + '\');" class="btn main small push_right_10 escape-event" style="margin-left:0px;float:left;">Accept & Deploy</a>&nbsp;';
	    		   }else{
	    			   buttons += '<a  href="#" onclick="deployApp(\'<%=applicationKey%>\',\'' + version + '\',\'' + stage + '\',\'deploy\',\'started\',\'' + type + '\');" class="btn main small push_right_10 escape-event" style="margin-left:0px;float:left;">Deploy</a>&nbsp;';
	    		   }
    		   }
    	   }

    	   $('#td-4'+version.replace(/\./g,"_")).html("");
    	   $('#td-4'+version.replace(/\./g,"_")).html(buttons);
    	   setClipBoard(version);
       }, function (jqXHR, textStatus, errorThrown) {
           jagg.message({
               content: "Error occurred while checking "+ '<%=applicationKey%>' +" deployed in " + stage,
               type: 'error',
               id:'message_id'
           });
       });
   }

//sets the clip board for the copy-url icons
function setClipBoard(version){

       var element_ID='#launch' + version.split(".").join("_");
       var clip = new ZeroClipboard($(element_ID));
       console.log("set El id");

       clip.on('load', function (client) {
           console.log( client);
       });

       clip.on('complete', function (client, args) {
           // alert("Copied text to clipboard: " + args.text );
       });
       clip.on('mousedown', function (client) {

       });
}

   function updateAppVersionPromoteStatus(promoteStatus, version){
       jagg.post("../blocks/application/update/ajax/update.jag", {
               action: "updatePromoteStatus",
               applicationKey: '<%=applicationKey%>',
               username:'<%=userName%>',
               promoteStatus:promoteStatus,
               version:version
           }, function (result) {},
           function (jqXHR, textStatus, errorThrown) {});
   };


   function deployApp(applicationKey, version, stage, deployAction, state, type){
       jagg.post("../blocks/build/add/ajax/add.jag", {
               action: "copyNewDependenciesAndDeployArtifact",
               applicationKey: applicationKey,
               deployAction:deployAction,
               stage:stage,
               tagName:"",
               version:version
           }, function (result) {
               jagg.message({
                   content: "The Deployment is successfully submitted. - Refresh the page in few seconds.",
                   type: 'success',
                   id:'message_id_success'
               });
               hideNotification();
           },

           function (jqXHR, textStatus, errorThrown) {
               jagg.message({
                   content: "Error occurred while deploying the artifact.",
                   type: 'error',
                   id:'message_id'
               });

           });
   };

   function acceptAndDeploy(applicationKey, version, stage, deployAction, state, type){
	   deployApp(applicationKey, version, stage, deployAction, state, type);
	   updateAppVersionPromoteStatus("",version);
   };


   function launchApp(applicationKey, version,stage,state,type,getUrlOnly){
      	  var URL="";
      	  URL=urlMap[version];

       	  if(URL===undefined){
           jagg.post("../blocks/application/get/ajax/list.jag", {
               action: "getMetaDataForAppVersion",
               applicationKey: applicationKey,
               version: version,
               stage: stage,
               state: state,
               type: type
           }, function (result) {
               var resJSON;
               var msg = "";
               resJSON = jQuery.parseJSON(result);

               var URL = resJSON.url;

               if((!URL)&&(!getUrlOnly)){
                   jagg.message({
                       content: "Application is not deployed yet!",
                       type: 'error'
                   });
                return;
               }
               //Domain mapping
               if(domainMappedVersion != null && version == domainMappedVersion && previousSubDomain != null  && (previousSubDomain.trim().length > 0)){
                   URL = "http://" + previousSubDomain + ".<%=appDomain%>";
               }
               if(!getUrlOnly){
                   window.open(URL, '_blank');
               }else{
                   urlMap[version]=URL;
                   $('#launch'+version.split(".").join("_")).attr('data-clipboard-text',URL);
               }
           },
           function (jqXHR, textStatus, errorThrown) {
               jagg.message({
                   content: "Error occured while launching the artifact.!",
                   type: 'error'
               });

           });
       	 }else{
	       	  if(!getUrlOnly){
	              window.open(URL, '_blank');

	          }else{
	              $('#launch'+version.split(".").join("_")).attr('data-clipboard-text',URL);
	          }

          }

   }

   function issuesSummary(appKey){

   jagg.syncPost("../blocks/issuetracker/list/ajax/list.jag", {
       action:"getIssuesSummary",
       applicationKey:appKey
   },function (result) {
       issuesSummaryJSON = result ;
   },function (jqXHR, textStatus, errorThrown) {
    $("#trackerStatus").text("Error occured while retrieving Issue Tracker information!");
    $(".issuetracker").hide();
   });
   }

    function getOpenIssuesSummary(appKey,appVersion){

   jagg.syncPost("../blocks/issuetracker/list/ajax/list.jag", {
       action:"getOpenIssues",
       applicationKey:appKey,
       applicationVersion:appVersion
   },function (result) {
       openIssuesSummaryJSON[appVersion] = result ;
   },function (jqXHR, textStatus, errorThrown) {
    $("#trackerStatus").text("Error occured while retrieving Issue Tracker information!");
    $(".issuetracker").hide();
   });
   }

   function getIssueSummaryForVersion(version){
   if(issuesSummaryJSON[version]===undefined){
       return {'VULNERABILITY':'0','NEW_FEATURE':'0','BUG':'0'};
   }
   return issuesSummaryJSON[version];
   }

   function getTotalOpenIssueCountForVersion(version){
    var issueSummery =openIssuesSummaryJSON[version];
   var total = 0;

   for (var key in issueSummery) {
           total = ++total;
   }
   return total;
   }

   function getTotalIssueCountForVersion(version){
   var issueSummery = getIssueSummaryForVersion(version);
   var total = 0;

   for (var key in issueSummery) {
       if (issueSummery.hasOwnProperty(key) && key != 'appKey' && key != 'version') {
           total = total + Number(issueSummery[key]);
       }
   }
   return total;
   }

   function formatCount(count){
   if(count===undefined){
       return 0;
   }
   return count;
   }

   function loadApplicationInfo(){
       jagg.post("../blocks/application/get/ajax/list.jag", {
            action:"getAppInfo",
            applicationKey:'<%=applicationKey%>'
        },function (result) {
            var parsedArray = jQuery.parseJSON(result);

            $('#apptype').html(parsedArray.typeDisplayName);
            $('#appName').html(parsedArray.name);
            $('#repotype').html(parsedArray.repositoryTypeDisplayName);
            var repoAccessabilityResult =  parsedArray.repoAccessability;
            var repoAccessabilityStrToDisplay = "";
            if(repoAccessabilityResult ==  "perDevRepo") {
                repoAccessabilityStrToDisplay = "Per Developer Repo";
            } else {
               repoAccessabilityStrToDisplay = "Share Parent Repo";
            }
            $('#repoAccessability').html(repoAccessabilityStrToDisplay);
            appInfo=parsedArray;
            appownerName=parsedArray.owner;
            $('#appowner').html("<span title='"+appownerName+"'>"+appownerName+"</span>");


            if(parsedArray.description!=null && parsedArray.description!=""){
                descriptionInfo=parsedArray.description;
                $('.description').html(descriptionInfo);
            }
            else{
                $('#description_view').html("Click here to add description");
                $('#description_hover').html("Click here to add description");
            }

            if(parsedArray.description!="null"){
                $('#description_edit').val(parsedArray.description);
            }

            var type = "<%= jagg.getAbsoluteUrl(jagg.getThemeFile('assets/img/apptype/" + appInfo.type + ".png'))%>";
	    $('#type').attr("src", type);
       },function (jqXHR, textStatus, errorThrown) {
           jagg.message({content:'Could not load Application information',type:'error',id:'myuniqeid' });
       });
   }

   function VersionComparator(a,b) {
	   return b.version.localeCompare(a.version);
   }

   var repoCloneURL = "" ;
   var repoBrowseURL = "" ;


   function createCurrentStatus(isLoad) {
	    $('#repositories_and_builds_list_content_new tbody').empty();
	    jagg.post("../blocks/application/get/ajax/list.jag", {
	        action: "getAppVersionsInStages",
	        userName: $("#userName").attr('value'),
	        applicationKey: '<%=applicationKey%>'
	    }, function (result) {

	        var parsedArray = jQuery.parseJSON(result);
	        var versions = Array();
	        var applicationType;
	        var versionExistsForDomainMapping = false;
	        for (var i = 0; i < parsedArray.length; i++) {
	            var application = parsedArray[i];
	            versions = versions.concat(application.versions);
	            applicationType = application.type;
	            previousSubDomain = application.mappedSubDomain;
	        }

	        if(previousSubDomain != null && previousSubDomain != "null" && previousSubDomain != ""){
               $('.sub_domain').html(previousSubDomain);
               $('#sub_domain_edit').val(previousSubDomain);
            }else{
                $('.sub_domain').html("<span class='sub_domain_no_txt'>&lt;sub_domain&gt;</span>");
	        }

	        versions.sort(VersionComparator);
	        issuesSummary(applicationKey);

	        //var warAppVersions = [];
	        for (var j = 0; j < versions.length; j++) {
	            var versionInfo = versions[j];
	            var versionStage = versionInfo.stage;
	            var currentVersion = versionInfo.version;
	            var promoteStatus = versionInfo.promoteStatus;
	            var deployedBuildId = versionInfo.deployedBuildId;

	            getOpenIssuesSummary(applicationKey,currentVersion);

	            //Domain Mapping Logic
	            //T0D0 hardcorded app type
	            if (applicationType == "war" || applicationType == "Uploaded-binary-App-war") {
	               // warAppVersions.push(currentVersion);
	                var previousDomain = versionInfo.productionMappedDomain;
	                if (previousDomain != null && previousDomain.trim().length) {
	                    domainMappedVersion = currentVersion;
	                }
	                
	                if(fgdmAllowedStage == versionStage){
	                	versionExistsForDomainMapping = true;
	                }
	            }

	            var lasbuildinfo = versionInfo.lastBuildResult;
	            var buildSplitted = lasbuildinfo.split(' ');
	            var builResultStatus = buildSplitted[2];

	            var buildStatus = '';
	            var success=new RegExp("\\bsuccess");
	            if(success.test(builResultStatus)){
	                buildStatus='<span>Build ' + buildSplitted[1] + ' ' +
	                    '<strong class="status success ">'+builResultStatus+'</strong></span>';
	            }else if(lasbuildinfo.length>0){
	                buildStatus='<span>Build ' + buildSplitted[1] + ' ' +
	                    '<strong class="status failed ">'+builResultStatus+'</strong></span>';
	            }

	            repoCloneURL = versionInfo.repoURL;
	            $("#repocloneurl").val(repoCloneURL);
	            $("#copymain").attr("data-clipboard-text", repoCloneURL);
	            repoBrowseURL = repoCloneURL;
	            if (application.repositoryType == "git") {
	                repoBrowseURL = repoCloneURL.replace("/git/", "/summary/?r=");
	            }
	            $("#repobrowseurl").attr("href", repoBrowseURL);


	            var v = currentVersion.replace(/\./g, '_');
	            var issueSummaryObj = getIssueSummaryForVersion(currentVersion);
	            var totalIssueCount = getTotalOpenIssueCountForVersion(currentVersion);


	            //   var url= launchApp(applicationKey,currentVersion,versionStage,'started',applicationType,true);
	            //   debugger;


	            if((isTenantAdmin === 'true') | (hasCXOPermissionOnApps === 'false')){

	              var trs = $(
	                '<tr>' +
	                '<td class="td-2"><a class="js-table-collapse icon-chevron-right"> <span class="collapsable-title">' + currentVersion + '</span> </a></td>' +
	                '<td class="td-2">' + versionStage + '</td>' +
	                //removing ETA
	                //'<td class="td-3" align="center" id="eta_' + applicationKey + '_' + currentVersion.replace(/\./g, '_') + '"></td>' +
	                '<td class="td-2">' + buildStatus + '</td>' +
	                '<td class="td-2 vertical-links"><a style="margin-bottom: 0px" href="<%=jagg.getAbsoluteUrl("/site/pages/issuetracker.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>" class="escape-event">' + totalIssueCount + ' Open Issues' + '</a></td>' +
	                '<td class="td-4" id="td-4'+ currentVersion.replace(/\./g,"_") +'"></td>' +
	                '</tr>' +
	                '<tr style="display:none;">' +
	                '<td class="td-2">' +
	                '</td>' +
	                '<td class="td-2"> </td>' +
	                '<td class="td-2"> </td>' +
	                '<td class="td-2 vertical-links">' +
	                '<div class="escape-event">' + formatCount(issueSummaryObj.BUG) + ' Bugs</div>' +
	                '<div class="escape-event">' + formatCount(issueSummaryObj.NEW_FEATURE) + ' Features</div>' +
	                '<div class="escape-event">' + formatCount(issueSummaryObj.VULNERABILITY) + ' Vulnerabilities</div>' +
	                '</td>' +
	                '<td class="td-4"> </td>' +
	                '</tr>'
	            );
	            } else {
	               var trs = $(
	                '<tr>' +
	                '<td class="td-2"><a class="js-table-collapse icon-chevron-right"> <span class="collapsable-title">' + currentVersion + '</span> </a></td>' +
	                '<td class="td-2">' + versionStage + '</td>' +
	                //removing ETA
	                //'<td class="td-3" align="center" id="eta_' + applicationKey + '_' + currentVersion.replace(/\./g, '_') + '"></td>' +
	                '<td class="td-2">' + buildStatus + '</td>' +
	                '<td class="td-2 vertical-links"><a style="margin-bottom: 0px">' + totalIssueCount + ' Open Issues' + '</a></td>' +
	                '<td class="td-4" id="td-4'+ currentVersion.replace(/\./g,"_") +'"></td>' +
	                '</tr>' +
	                '<tr style="display:none;">' +
	                '<td class="td-2">' +
	                '</td>' +
	                '<td class="td-2"> </td>' +
	                '<td class="td-2"> </td>' +
	                '<td class="td-2 vertical-links">' +
	                '<div class="escape-event">' + formatCount(issueSummaryObj.BUG) + ' Bugs</div>' +
	                '<div class="escape-event">' + formatCount(issueSummaryObj.NEW_FEATURE) + ' Features</div>' +
	                '<div class="escape-event">' + formatCount(issueSummaryObj.VULNERABILITY) + ' Vulnerabilities</div>' +
	                '</td>' +
	                '<td class="td-4"> </td>' +
	                '</tr>'
	            );
	            }

	            $('#repositories_and_builds_list_content_new').append(trs);
	            isAppDeployed(currentVersion, versionStage, applicationType, promoteStatus);

	            //updateCalculatedETAValue(applicationKey, versionStage, currentVersion);
	            if(isLoad){
	                launchApp(applicationKey, currentVersion, versionStage, 'started', applicationType, true);
	            }

	        }
	        var clip = new ZeroClipboard($('#copymain'));

	        clip.on('load', function (client) {
	            //alert( "movie is loaded" );
	        });

	        clip.on('complete', function (client, args) {
	            // alert("Copied text to clipboard: " + args.text );
	        });
	        clip.on('mousedown', function (client) {

	        });

	        $('.js-table-collapse').click(function () {
	            $(this).toggleClass("icon-chevron-down").closest("tr").toggleClass("expanded").next().toggle('fast');
	        });
	        
	        if(hasDomainMappingPermission === 'true' && versionExistsForDomainMapping){
	    		$('#urlMapper').show();
	    	}
	    }, function (jqXHR, textStatus, errorThrown) {});
	}

   function validateSubDomain(){
	   subDomain = $('#sub_domain_edit').val();
	   var pattern=/^[a-zA-Z0-9]*$/;
	   if(!subDomain.trim().length || subDomain == 'null' || !pattern.test(subDomain)){
		   jagg.message({content:'Please specify a valid subdomain',type:'error',id:'myuniqeid' });
	       return false;
	   }
	   return true;
   }

   function updateDomainMapping() {
	   if(domainMappedVersion){
		   jagg.post("../blocks/urlmapper/update/ajax/update.jag", {
	           action:"updateDomainMappingForSameAppVersion",
	           version:domainMappedVersion,
	           oldSubDomain:previousSubDomain,
	           newSubDomain:subDomain,
	           applicationKey:applicationKey,
	           tenantDomain:tenantDomain,
	           username:loggedinUser
	       },function (result) {
	    	   updateSubDomain();
	       },function (jqXHR, textStatus, errorThrown) {
	    	   //TODO: If error occured update domain mapping to previousSubDomain
	           jagg.message({content:'Error occured while updating domain mapping with sudomain '+subDomain,type:'error',id:'myuniqeid' });
	       });
	   }else{
		   updateSubDomain();
	   }
   }

   function updateSubDomain(){
	   jagg.post("../blocks/application/update/ajax/update.jag", {
	       action:"updateSubDomain",
	       applicationKey:applicationKey,
	       mappedSubDomain:subDomain,
	       username:loggedinUser
	       },function (result) {
	    	   createCurrentStatus(false);
	       },function (jqXHR, textStatus, errorThrown) {
	           //jagg.message({content:'Error occured while updating application URL!',type:'error' });
	           jagg.message({content:'Error occured while updating application subdomain!',type:'error',id:'myuniqeid' });
	   });
   }

   function updateCalculatedETAValue(appKey,stage, version){
           var endDate ="" ;
           jagg.post("../blocks/eta/calculate/ajax/get.jag", {
                action:"calculate",
                applicationKey:'<%= applicationKey %>',
                version:version,
                stage:stage

            },function (result) {
                var parsedObject = jQuery.parseJSON(result);
                var v= version.replace(/\./g, '_') ;
                $("#eta_"+appKey+"_"+v).text("");
        	if(!result.error && parsedObject.eta.endDate.length != 0){
                      $("#eta_"+appKey+"_"+v).text("Estimated Date : "+ parsedObject.eta.endDate);
              }
            },function (jqXHR, textStatus, errorThrown) {

            });
   }

   function getHelpTips(){
   jagg.post("../blocks/help/ajax/help.jag", {
           action: "getHelpTips",
           page: "applicationHome",
       },

       function (result) {
           helpTips = jQuery.parseJSON(result);
		$("#appDescription").html(helpTips.appDescription);
                $("#productionUrl").html(helpTips.productionUrl);
                $("#launch").html(helpTips.launch);
                $(".appHomeIcon").attr("title",helpTips.appIcon);
   },

       function (jqXHR, textStatus, errorThrown) {
       });
   }
   //]]
</script>
<input type="hidden" name="userName" id="userName" value="<%=userName%>"/>
<input type="hidden" name="applicationKey" id="applicationKey" value="<%=applicationKey%>"/>
<script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('templates/application/get/js/get.js'))%>"></script>
<div class="container overview-page">
<article class="main">
 <% jagg.includeBlock("page/messages", null); %>
 <% jagg.includeBlock("page/notification-wall", {"wall_name":applicationKey+" - App Wall","applicationKey":applicationKey,"pageName":"App Home"}); %>
<!--New  Theme -->

            <section class="separator">
                 <div class="page-content-area-top">
                    <div class="af_container">
                        <div class="af_row">
                            <div class="col-2">
                                <h2 class="push_top_10">Name</h2>
                                <span id="appName" ></span>
                                <div class="element-editor-wrapper icon-wrapper">
                                    <div class="element-editor-default">
                                        <% if(applicationKey != null && applicationName != null){ %>
                                        <img class="appHomeIcon" src="<%=iconUrl%>" alt=""  width="100px"/>

                                        <% } %>
                                    </div>
                                    <div class="element-editor-hover">
                                         <% if(applicationKey != null && applicationName != null){ %>
                                        <img class="appHomeIcon" src="<%=iconUrl%>" alt=""  width="100px"/>

                                        <% } %>
                                        <span class="icon-pencil"></span>
                                    </div>

                                </div>
                                <div class="element-editor-edit" style="display:none">
                                    <% if(applicationKey != null && applicationName != null){ %>
                                    <div id="changeAppHomeIcon" >
                                        <img class="appHomeIcon" src="<%=iconUrl%>" alt=""  width="100px"/>
                                       <form id="changeAppIcon" class="changeAppIcon"  name="changeAppIcon" action="/appmgt/site/blocks/application/update/ajax/update.jag" method="post" enctype="multipart/form-data">
                                          <label for="icon" class="icon-label">Select file</label>
                                          <input id="icon" style="position:absolute;z-index:2;opacity:0" type="file" name="changeIcon" value="Browse..."  onchange="submitChangeAppIcon()" />
                                          <div style="clear:both"></div>
                                          <input id="action" type="hidden" value="changeAppIcon" name="action"/>
                                          <input id="applicationKey" type="hidden" name="applicationKey" value="<%=applicationKey%>"/>
                                          <input id="applicationName" type="hidden" name="applicationName" value="<%=applicationName%>"/>
                                       </form>
                                    </div>
                                    <% } %>
                                    <div class="element-editor-btn-panel">
                                        <a class="element-editor-cancel">Cancel</a>
                                    </div>
                                </div>

                            </div>
                        <div class="col-10">
                           <div class="af_row">
                            <div class="col-1">
                            <h2>&nbsp;</h2>
                            <!--span id="appName" ></span-->
                            </div>
                            <div class="col-5">

                                <h2 class="push_top_10">Application Type</h2>
                                <img src='' id='type'/>
                                <span id='apptype'></span>
                            </div>
                            <div class="col-5">
                                <h2 class="push_top_10">Owner</h2>
                                <span id="appowner"></span>
                            </div>

                            </div>
                            <div class="af_row push_top_10">
                             <div class="col-1">
                            <h2>&nbsp;</h2>
                            <!--span id="appName" ></span-->
                            </div>
                            <div class="col-10">

                                <h2 style='margin-top:15px'>Repository URL</h2>
                                <div>
		                            <form class="inline-form form-container">
		                                <input type="text" class="medium-large-text-box" id="repocloneurl" disabled value="" />
		                                <a class="copy-link" id ="copymain" title="Copy URL" data-clipboard-text="">
		                                 <span class="icon-copy"></span>
		                                </a>
		                                <a class="goto-git-link" id="repobrowseurl" href="" target="_blank" title="Browse Git URL">
		                                 <span class="icon-globe"></span>
		                                </a>
		                             </form>
		                        </div>

                            </div>
                            </div>
                            <div class="af_row push_top_10">
                             <div class="col-1">
                            <h2>&nbsp;</h2>
                            <!--span id="appName" ></span-->
                            </div>
                            <div class="col-10" id="urlMapper" style="display:none">
                                <h2>Production URL</h2>
				                <div class="help-block"><span class="help-icon">?</span> <span id="productionUrl"></span></div>
                                <div class="element-editor-wrapper">
                                    <div class="element-editor-default">
                                        http://<span id="sub_domain_view" class="sub_domain"></span>.<%=appDomain%>

                                    </div>
                                    <div class="element-editor-hover">
                                        http://<span id="sub_domain_hover" class="sub_domain"></span>.<%=appDomain%>
                                        <span class="icon-pencil"></span>
                                    </div>

                                </div>
                                <div class="element-editor-edit" style="display:none">
                                    http://<input type="text" value="" id="sub_domain_edit" class="small-text-box" /> .<%=appDomain%>
                                    <div class="element-editor-btn-panel">
                                        <button class="btn main small" id="sub_domain_save_btn">Save</button>  <a class="element-editor-cancel" id="sub_domain_cancel_btn">Cancel</a>
                                    </div>
                                </div>
                            </div>
                            </div>
                        </div>
                        </div>
                        <div class="af_row">
                            <div class="col-12">
                                <h2>Description</h2>
     				            <div class="help-block"><span class="help-icon">?</span> <span id="appDescription"></span></div>
                                <div class="element-editor-wrapper">
                                    <div class="element-editor-default description" id="description_view">Click here to add description</div>
                                    <div class="element-editor-hover">
                                        <span class="description" id="description_hover"></span>
                                        <span class="icon-pencil"></span>
                                    </div>

                                </div>
                                <div class="element-editor-edit" style="display:none">
                                    <textarea class="description" id="description_edit"></textarea>
                                    <div class="element-editor-btn-panel">
                                        <button class="btn main small" id="description_save_btn">Save</button>  <a class="element-editor-cancel">Cancel</a>
                                    </div>
                                </div>

                            </div>




                        </div>
                    </div>
               </div>
               <hr />
               <div class="page-content-area">
                    <div class="af_container">
                        <div class="af_row">
                            <div class="col-12">

		                        <div style="clear:both"></div>
                                <h2>Current Status</h2>
                                <div class="help-block">
                                	<span class="help-icon">?</span><span id="launch" style="padding-left: 3px"></span>
                                </div>
                                <table class="data-table" id="repositories_and_builds_list_content_new">
                                    <thead>
                                        <tr>
                                            <th colspan="6"></th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                    </tbody>
                                </table>
	                         </div>
                        </div>
                    </div>
               </div>
               <hr />
                <div class="page-content-area">
                    <div class="af_container">
                        <div class="af_row">
                            <div class="col-4">
                                <div id='deleteDiv'>
                                     <form id='deleteForm' action='/appmgt/site/blocks/application/delete/ajax/delete.jag'>
                                         <input type='hidden' name='userName' value='<%= session.get("LOGGED_IN_USER") %>'/>
                                         <input type='hidden' name='appKey' value='<%=applicationKey %>'/>
                                         <a href='#' id='deleteButton' class='btn sub_action'>Delete Application</a>
                                     </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

         </section>



            <!--New Theme End-->

</article>
<input type="hidden" name="userName"  id="userName" value='<%= session.get("LOGGED_IN_USER") %>'/>
<!-- Todo - post 1.0 -->
<% //jagg.includeBlock("comment/comment-add", {"reference":"/repository/applications/"+ applicationKey +"/appinfo"}); %>
<% //jagg.includeBlock("comment/comment-list", {"reference":"/repository/applications/"+ applicationKey +"/appinfo"}); %>
</div><!-- /container -->
<script type="text/javascript">
$(document).ready(function () {
    loadApplicationInfo();
    loggedinUser = $('#userName').val();
    if (loggedinUser == appownerName) {
        $('#description').qtip({
            content: {
                text: $(this).attr('data-value')
            },
            show: {
                when: 'click',
                solo: true // Only show one tooltip at a time
            },
            hide: 'unfocus',
            style: {
                classes: 'popup_status_box tooltip',
                widget: false,
                def: false
            }
        });
        $('#urlMapper').qtip({
            content: {
                text: $(this).attr('data-value')
            },
            show: {
                when: 'click',
                solo: true // Only show one tooltip at a time
            },
            hide: 'unfocus',
            style: {
                classes: 'popup_status_box tooltip',
                widget: false,
                def: false
            }
        });

    }
});
</script>
<% }); %>
