CREATE EXTERNAL TABLE IF NOT EXISTS AppCreationTable
                (row_id STRING, applicationName STRING, applicationKey STRING, timest BIGINT,
                                user STRING, appType STRING, repoType STRING, tenantId STRING)
                                STORED BY 'org.apache.hadoop.hive.cassandra.CassandraStorageHandler'
                                with SERDEPROPERTIES
                                ("wso2.carbon.datasource.name" = "WSO2BAM_CASSANDRA_DATASOURCE",
                                 "cassandra.cf.name" = "org_wso2_carbon_appfactory_appCreation" ,
                                 "cassandra.columns.mapping" =
                                 ":key,payload_applicationName,payload_applicationKey,Timestamp,payload_user,payload_appType,payload_repoType, payload_tenantId" );

                                 
 CREATE EXTERNAL TABLE IF NOT EXISTS APP_DETAILS
     (APPLICATION_NAME STRING,APPLICATION_KEY STRING,TIME_ST BIGINT,APPLICATION_TYPE STRING,REPO_TYPE STRING,TS STRING,YYYY SMALLINT,MM SMALLINT,DD SMALLINT) STORED BY
    'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler'
    TBLPROPERTIES (
    'mapred.jdbc.driver.class' = 'com.mysql.jdbc.Driver' ,
    'wso2.carbon.datasource.name'='WSO2_AF_STAT_DB',
    'hive.jdbc.update.on.duplicate' = 'true' ,
    'hive.jdbc.primary.key.fields' = 'APPLICATION_KEY' ,
    'hive.jdbc.table.create.query' =
    'CREATE TABLE APP_DETAILS
    (APPLICATION_NAME VARCHAR(100),APPLICATION_KEY VARCHAR(100),TIME_ST BIGINT,APPLICATION_TYPE VARCHAR(100),REPO_TYPE VARCHAR(100),TS VARCHAR(100),YYYY SMALLINT,MM SMALLINT,DD SMALLINT)' );
   
    insert overwrite table APP_DETAILS
    SELECT applicationName, applicationKey, timest, appType,
    repoType , x.new_timestamp, year(x.new_timestamp) as year, month(x.new_timestamp) as month, day(x.new_timestamp) as day from                                 
    (select applicationName, applicationKey, timest, appType,
    repoType, from_unixtime(cast(substr(cast(timest as string),1,10) as bigint),'yyyy-MM-dd') as new_timestamp from AppCreationTable) x;
   
   
    CREATE EXTERNAL TABLE IF NOT EXISTS NO_OF_APPS_BY_TYPE
     (APPLICATION_TYPE STRING, NO_OF_APPS INT) STORED BY
    'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler'
    TBLPROPERTIES (
    'mapred.jdbc.driver.class' = 'com.mysql.jdbc.Driver' ,
    'wso2.carbon.datasource.name'='WSO2_AF_STAT_DB',
    'hive.jdbc.update.on.duplicate' = 'true' ,
    'hive.jdbc.primary.key.fields' = 'APPLICATION_TYPE' ,
    'hive.jdbc.table.create.query' =
    'CREATE TABLE NO_OF_APPS_BY_TYPE
    (APPLICATION_TYPE VARCHAR(100),NO_OF_APPS INT)' );

    insert overwrite table NO_OF_APPS_BY_TYPE
    select appType, COUNT(DISTINCT applicationKey) as noOfApps from AppCreationTable group by appType;
 
 
    CREATE EXTERNAL TABLE IF NOT EXISTS APP_CREATION_BY_TENANT
     (APPLICATION_NAME STRING,APPLICATION_KEY STRING,TIME_ST BIGINT,APPLICATION_TYPE STRING,REPO_TYPE STRING,TENANT_ID STRING, USER STRING) STORED BY
    'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler'
    TBLPROPERTIES (
    'mapred.jdbc.driver.class' = 'com.mysql.jdbc.Driver' ,
    'wso2.carbon.datasource.name'='WSO2_AF_STAT_DB',
    'hive.jdbc.update.on.duplicate' = 'true' ,
    'hive.jdbc.primary.key.fields' = 'TENANT_ID,USER,APPLICATION_KEY' ,
    'hive.jdbc.table.create.query' =
    'CREATE TABLE APP_CREATION_BY_TENANT
    (APPLICATION_NAME VARCHAR(100),APPLICATION_KEY VARCHAR(100),TIME_ST BIGINT,APPLICATION_TYPE VARCHAR(100),REPO_TYPE VARCHAR(100),TENANT_ID VARCHAR(100), USER VARCHAR(100))' );
   
    insert overwrite table APP_CREATION_BY_TENANT
    SELECT applicationName, applicationKey, timest, appType,
    repoType , tenantId, user from AppCreationTable ;
    
    
    
CREATE EXTERNAL TABLE IF NOT EXISTS NO_OF_APPS_BY_TENANT
     (TENANT_ID STRING, NO_OF_APPS INT) STORED BY
    'org.wso2.carbon.hadoop.hive.jdbc.storage.JDBCStorageHandler'
    TBLPROPERTIES (
    'mapred.jdbc.driver.class' = 'com.mysql.jdbc.Driver' ,
    'wso2.carbon.datasource.name'='WSO2_AF_STAT_DB',
    'hive.jdbc.update.on.duplicate' = 'true' ,
    'hive.jdbc.primary.key.fields' = 'TENANT_ID' ,
    'hive.jdbc.table.create.query' =
    'CREATE TABLE NO_OF_APPS_BY_TENANT
    (TENANT_ID VARCHAR(100),NO_OF_APPS INT)' );

    insert overwrite table NO_OF_APPS_BY_TENANT
    select tenantId, COUNT(DISTINCT applicationKey) as noOfApps from AppCreationTable group by tenantId;

                                    
